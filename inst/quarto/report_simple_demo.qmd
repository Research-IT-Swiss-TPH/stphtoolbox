---
title: "TITLE OF DOCUMENT"
additional1: "ADDITIONAL LINE"
additional2: "ADDITIONAL LINE"
subtitle: "Subtitle of Document"
projectname: "Name of Project/Mandate, etc..."
author: "Name of Author"
email: "E-mail of author (optional)"
telephone: "Telephone of author (optional)"
format:
  report-pdf:
    pdf-engine: xelatex
date: last-modified
mainfont: Arial
fontsize: 11pt
lang: en
execute: 
  echo: false
  warning: false
toc: true
toc-depth: 3
toc-title: \textcolor{swisstphblue}{TABLE OF CONTENTS}
---

```{r}
# Put a R chunk here even if you don't need it
# to make sure the rendering works well
```


<!-- COVER PAGE SEE "_extensions/report/before-body.tex" -->



<!-- MAIN PART -->

\newpage

# EXECUTIVE SUMMARY

```{r}
set.seed(42)
lorem::ipsum(2)
```

# EXAMPLE HEADING 1

```{r}
lorem::ipsum(1)
```

## EXAMPLE HEADING 2

```{r}
lorem::ipsum(2)
```

### EXAMPLE HEADING 3

```{r}
lorem::ipsum(2)
```

#### EXAMPLE HEADING 4

```{r}
lorem::ipsum(1)
```


## Example Table: Flextable

```{r}
#| label: tbl-flextable
#| tbl-cap: "Car Performance Data (mtcars)"
#| tbl-colwidths: auto

# Load required packages
library(flextable)
library(dplyr)

# Prepare data (first 5 rows of mtcars)
data <- head(mtcars, 5) %>% 
  tibble::rownames_to_column("Car Model") %>% 
  select(1:4) # Select first 4 columns for brevity

# Create flextable
ft <- flextable(data) %>%
  # Style headers
  bold(part = "header") %>% 
  bg(part = "header", bg = "#468AB2") %>% 
  color(part = "header", color = "white") %>% 
  # Style body
  bg(bg = "white", part = "body") %>% 
  # Column-specific formatting
  colformat_num(j = c("mpg", "disp"), digits = 1) %>% 
  # Autofit columns
  autofit()

ft
```


@tbl-flextable is an example of using R code to generate a table in Quarto documents.


## Example Chart: ggplot2

```{r}
#| label: fig-ggplot2
#| fig-cap: "Miles Per Gallon (MPG) Distribution"

library(ggplot2)
ggplot(mtcars, aes(x = mpg, fill = factor(cyl))) +
  geom_histogram(
    binwidth = 3, 
    position = "identity", 
    alpha = 0.6
  ) +
  scale_fill_manual(values = c("#B5C752", "#EDCD64", "#468AB2"))  # Teal, blue, purple
```

@fig-ggplot2 is an example of using R code to generate a figure in Quarto documents.


# TIPS AND TRICKS

## Swiss TPH self-paced Quarto tutorial

See [Swiss TPH Quarto training](https://research-it-swiss-tph.github.io/quarto_training/) for the Quarto tutorial website developed by Research-IT.

## Callout blocks in Quarto

You can create colourful callout blocks in Quarto very easily.

::: {.callout-note}
Note that there are five types of callouts, including:
`note`, `warning`, `important`, `tip`, and `caution`.
:::

See [Callout Blocks](https://quarto.org/docs/authoring/callouts.html) for more details.

\begin{tcolorbox}[colback=white,colframe=limegreen]

Or you can create more flexible callout blocks with LaTeX. Just like this one with Swiss TPH lime green.

\end{tcolorbox}
