---
title: "ODK entities presentation survey"
format:
  html:
    toc: true
editor: visual
execute:
  echo: false
  warning: false
---

```{r}
# Reader
library(readr)

# Data processing
library(dplyr)
library(forcats)

# Plots
library(ggplot2)
library(ggtext)
library(ComplexUpset)
library(patchwork)

# textual analysis
library("quanteda")
library("quanteda.textplots")

library("stphtoolbox")
```

```{r}
# Load Swiss TPH graphical chart colors
stph_colors <- stphtoolbox::palette()
stph_colors
```

```{r}
df <- readr::read_csv("ent_odk.csv")
```

```{r}
int_from_struct_string <- function(s, sep) {
  as.integer(unlist(strsplit(s, split = sep)))
}
```

```{r}
df1 <- df %>%
  dplyr::mutate(`data_experience-odk_user` = replace(`data_experience-odk_user`, `data_experience-odk_user` == 0, "Never used"),
                `data_experience-odk_user` = replace(`data_experience-odk_user`, `data_experience-odk_user` == 1, "Some knowledge, but not hands-on"),
                `data_experience-odk_user` = replace(`data_experience-odk_user`, `data_experience-odk_user` == 2, "Basic user"),
                `data_experience-odk_user` = replace(`data_experience-odk_user`, `data_experience-odk_user` == 3, "Independent user"),
                `data_experience-odk_user` = replace(`data_experience-odk_user`, `data_experience-odk_user` == 4, "Advanced user"),
                `What ODK user are you?` = factor(`data_experience-odk_user`, levels = c("Advanced user",
                                                                                         "Independent user",
                                                                                         "Basic user",
                                                                                         "Some knowledge, but not hands-on",
                                                                                         "Never used")))
```

```{r}
n1 <- nrow(df1)
plot1 <- df1 %>%
  dplyr::mutate(participation = factor(`registration-participation`, levels = c("2", "1"))) %>% 
  ggplot2::ggplot(mapping = ggplot2::aes(x = "",
                                         fill = participation)) +
  ggplot2::geom_bar(position = "stack") +
  ggplot2::geom_text(data = . %>%
                       dplyr::count(participation) %>%
                       dplyr::mutate(prop = n / sum(n)),
                     mapping = ggplot2::aes(x = "", y = n, label = scales::percent(prop, accuracy = 0.1), group = participation),
                     position = position_stack(),
                     hjust = 1.1,
                     colour = "white",
                     fontface = "bold") +
  ggplot2::labs(title = paste0("<img src = './people.png' width='32'><br/><span style = 'font-size:28pt;color:", red1, "'>", n1, "</span> <span style = 'font-size:28pt'>participants</span>"),
                subtitle = "Registration type",
                x = "",
                fill = "") +
  ggplot2::scale_fill_manual(labels = c('Zoom', 'On-site'),
                             values = c(grey2, grey1)) +
  ggplot2::theme_void() +
  ggplot2::theme(plot.title = element_markdown(),
                 plot.subtitle = element_text(hjust = 0.5)) +
  ggplot2::coord_flip()
```

```{r}
plot2 <- df1 %>%
  ggplot2::ggplot(mapping = ggplot2::aes(x = "",
                                         fill = `What ODK user are you?`)) +
  ggplot2::geom_bar(position = "stack") +
  ggplot2::geom_text(data = . %>%
                       dplyr::count(`What ODK user are you?`) %>%
                       dplyr::mutate(prop = n / sum(n)),
                     mapping = ggplot2::aes(x = "", y = n, label = scales::percent(prop, accuracy = 0.1), group = `What ODK user are you?`),
                     position = position_stack(),
                     hjust = 1.1,
                     colour = "white",
                     fontface = "bold") +
  ggplot2::labs(title = "",
                subtitle = "Type of ODK user",
                x = "",
                fill = "") +
  ggplot2::scale_fill_manual(values = c(blue1, blue2, grey1, red2, red1)) +
  ggplot2::theme_void() +
  ggplot2::theme(plot.title = element_markdown(),
                 plot.subtitle = element_text(hjust = 0.5)) +
  ggplot2::coord_flip()
```

```{r}
df2 <- df1 %>%
  dplyr::filter(`data_experience-odk_user` != "Never used")
n2 <- nrow(df2)
plot3 <- df2 %>%
  dplyr::mutate(awareness = factor(`data_experience-odk_entities`, levels = c("1", "0"))) %>% 
  ggplot2::ggplot(mapping = ggplot2::aes(x = "",
                                         fill = awareness)) +
  ggplot2::geom_bar(position = "stack") +
  ggplot2::geom_text(data = . %>%
                       dplyr::count(awareness) %>%
                       dplyr::mutate(prop = n / sum(n)),
                     mapping = ggplot2::aes(x = "", y = n, label = scales::percent(prop, accuracy = 0.1), group = awareness),
                     position = position_stack(),
                     hjust = 1.1,
                     colour = "white",
                     fontface = "bold") +
  ggplot2::labs(title = paste0("<img src = './database.png' width='32'><br/><span style = 'font-size:28pt;color:", red1, "'>", n2, "</span> <span style = 'font-size:28pt'>ODK users</span>"),
                subtitle = "ODK entity awareness",
                x = "",
                fill = "") +
  ggplot2::scale_fill_manual(labels = c("Yes", "No"),
                             values = c(blue1, red1)) +
  ggplot2::theme_void() +
  ggplot2::theme(plot.title = element_markdown(),
                 plot.subtitle = element_text(hjust = 0.5)) +
  ggplot2::coord_flip()
```

```{r}
#| label: fig-combined
#| fig-cap: Workshop participation and ODK Entity awareness
#| fig-width: 10
#| fig-height: 6
plot1 / plot2 / plot3
```

```{r}
#| label: fig-organisation
#| fig-cap: Organisation
df %>%
  dplyr::mutate(`registration-organisation` = ifelse(`registration-organisation` == 99 & `registration-department` != 9, 6, `registration-organisation`)) %>% 
  dplyr::mutate(`registration-organisation` = replace(`registration-organisation`, `registration-organisation` == 1, "Master"),
                `registration-organisation` = replace(`registration-organisation`, `registration-organisation` == 2, "PhD"),
                `registration-organisation` = replace(`registration-organisation`, `registration-organisation` == 6, "Staff"),
                `registration-organisation` = replace(`registration-organisation`, `registration-organisation` == 99, "Outside Swiss TPH"),
                organisation = factor(`registration-organisation`, levels = c("Master",
                                                                              "PhD",
                                                                              "Staff",
                                                                              "Outside Swiss TPH")),
                `registration-department` = replace(`registration-department`, `registration-department` == 1, "EPH"),
                `registration-department` = replace(`registration-department`, `registration-department` == 2, "ET"),
                `registration-department` = replace(`registration-department`, `registration-department` == 3, "MED"),
                `registration-department` = replace(`registration-department`, `registration-department` == 4, "MPI"),
                `registration-department` = replace(`registration-department`, `registration-department` == 5, "SCIH"),
                `registration-department` = replace(`registration-department`, `registration-department` == 9, "Outside Swiss TPH"),
                department = factor(`registration-department`, levels = c("EPH",
                                                                          "ET",
                                                                          "MED",
                                                                          "MPI",
                                                                          "SCIH",
                                                                          "Outside Swiss TPH"))) %>% 
  ggplot2::ggplot(mapping = ggplot2::aes(x    = forcats::fct_infreq(department),
                                         fill = organisation)) +
  ggplot2::labs(y = "Nb of participants",
                x = "",
                fill = "") +
  ggplot2::geom_bar(position = "stack") +
  ggplot2::scale_fill_manual(values = stph_colors) +
  ggplot2::theme_classic()
```

```{r}
tmp_df <- df %>%
  dplyr::filter(!is.na(`registration-other_org`)) %>% 
  dplyr::mutate(other_organisation = `registration-other_org`)
list_other_organisation <- noquote(sub("(.*),", "\\1 and", paste(tmp_df$other_organisation, collapse = ", ")))
```

Other organisations: `r list_other_organisation`.

# Data experience

We would like to know more about our experience with data collection and data collection tools such as ODK.

```{r}
df <- df %>%
  dplyr::rowwise() %>% 
  dplyr::mutate(`Form design`     = 1 * (1 %in% int_from_struct_string(`data_experience-data_responsibility`, " ")),
                `Database design` = 1 * (2 %in% int_from_struct_string(`data_experience-data_responsibility`, " ")),
                `Data collection` = 1 * (3 %in% int_from_struct_string(`data_experience-data_responsibility`, " ")),
                `Data cleaning`   = 1 * (4 %in% int_from_struct_string(`data_experience-data_responsibility`, " ")),
                `Data management` = 1 * (5 %in% int_from_struct_string(`data_experience-data_responsibility`, " ")),
                `Data analysis`   = 1 * (6 %in% int_from_struct_string(`data_experience-data_responsibility`, " ")),
                Other             = 1 * (9 %in% int_from_struct_string(`data_experience-data_responsibility`, " "))) %>% 
  dplyr::ungroup()
ComplexUpset::upset(df %>% 
                      dplyr::mutate(participation = factor(`registration-participation`)),
                    c("Form design",
                      "Database design",
                      "Data collection",
                      "Data cleaning",
                      "Data management",
                      "Data analysis",
                      "Other"),
                    name = 'Test',
                    min_size = 2,
                    base_annotations = list(
                      'Intersection size' = (ComplexUpset::intersection_size(mapping=aes(fill = participation)) +
                                               ggplot2::ylab("Nb of participants") +
                                               ggplot2::scale_fill_manual(values = c(blue1, blue2)) +
                                               ggplot2::theme_classic() +
                                               ggplot2::theme(axis.text.x = element_blank(), 
                                                              axis.ticks.x = element_blank()))),
                    width_ratio = 0.2,
                    stripes = "white",
                    set_sizes = (upset_set_size(filter_intersections = TRUE,
                                                geom = geom_bar(fill = red2),
                                                position = 'right') +
                                   ggplot2::ylab("Nb of participants") +
                                   ggplot2::theme(axis.text.x = element_text(angle = 90),
                                                  axis.ticks.x = element_line())),
                    guides = 'over')
```

## ODK client

```{r}
ComplexUpset::upset(df1 %>%
                      dplyr::filter(`data_experience-odk_user` != "Never used") %>% 
                      dplyr::rowwise() %>%
                      dplyr::mutate(ODKCollect = 1 * (1 %in% int_from_struct_string(`data_experience-odk_client`, " ")),
                                    Enketo     = 1 * (2 %in% int_from_struct_string(`data_experience-odk_client`, " "))) %>% 
                      dplyr::ungroup(),
                    c("ODKCollect",
                      "Enketo"),
                    name = 'ODK clients',
                    base_annotations = list(
                      'Intersection size' = (ComplexUpset::intersection_size(fill = blue1) +
                                               ggplot2::ylab("Nb of ODK users") +
                                               ggplot2::theme_classic() +
                                               ggplot2::xlab("") +
                                               ggplot2::theme(axis.text.x = element_blank(), 
                                                              axis.ticks.x = element_blank()))),
                    width_ratio = 0.2,
                    stripes = 'white',
                    set_sizes = (ComplexUpset::upset_set_size(geom = geom_bar(fill = red2),
                                                              position = 'right') +
                                   ylab("Nb of ODK users")),
                    guides = 'over')
```

# Expectations and data flows

## Expectations

What do you hope to learn in this presentation?

```{r}
df %>%
  dplyr::select(`expectations-learning_expectations`) %>%
  knitr::kable()
```

```{r}
# tokens1 <- tokens(df$`expectations-learning_expectations`) %>% 
#     tokens(remove_punct = TRUE)  %>% 
#     tokens_remove(pattern = stopwords('english'))  %>%
#     dfm() %>%
#     dfm_trim(min_termfreq = 3, verbose = FALSE)
# 
# set.seed(100)
# textplot_wordcloud(tokens1)
```

```{r}
df3 <- data.frame(text = c("How to create a questionnaire with different type of questions",
                           "How to implement a study in a remote site to collect data.",
                           "How to manage users & QC data collection. Learn about the audit trail and metadata of ODK. … but just having a starting point on all of theses issues is fine! How to extract data from ODK, How to export data and Learn about ODK possibilities to manage data during and after data collection.",
                           "data management, cleaning",
                           "Is there any risk that we might “bias” our repeated assessments based on what was found in previous assessments using the entities method?"))
tokens(df3$text) %>%
  dfm() %>% 
  textplot_wordcloud()
```

## Workflows

Can you briefly describe your data collection workflow in a few bullet points?

```{r}
df %>%
  dplyr::mutate(dc_workflow = gsub("\n", "", `expectations-dc_workflow`)) %>%
  dplyr::filter(dc_workflow != "") %>% 
  dplyr::select(dc_workflow) %>% 
  knitr::kable()
```

```{r}
# tokens1 <- tokens(df$`expectations-dc_workflow`) %>% 
#     tokens(remove_punct = TRUE)  %>% 
#     tokens_remove(pattern = stopwords('english'))  %>%
#     dfm() %>%
#     dfm_trim(min_termfreq = 1, verbose = FALSE)
# 
# set.seed(100)
# textplot_wordcloud(tokens1)
```
